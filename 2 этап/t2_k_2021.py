'''
Учёные-астрофизики обнаружили неизвестный космический объект, с которого приходит зашумлённый сигнал. Чтобы максимально сократить количество шума, необходимо постоянно держать объект в фокусе приёмника сигнала. С этой целью на приёмник была установлена камера, которая оцифровывает изображения и отправляет их на сервер. Программа обрабатывает полученные данные и определяет, куда и на сколько шагов необходимо отклонить приёмник.

Ваша задача: написать программу, которая по данным с камеры определит, в какую сторону и на сколько шагов необходимо сместить приёмник относительно центра снимка, совместить его с центром объекта.

Подготовленные данные с камеры приходят в виде матрицы 7 на 7 ячеек, состоящей из цифр 0, 1, 2, 3, где 0 – полное отсутствие объекта, 1 – край объекта, 2 – часть объекта, 3 – центр объекта. 

В качестве команд приёмника используются пары цифр Х,Y, где Х – смещение приёмника по оси X (направлена вправо), а Y – смещение спутника по оси Y (направлена вниз). Смещение в обратном направлении обозначается отрицательным числом.

Сам объект в оцифрованном виде выглядит следующим образом:

0000000
0001000
0002000
0123210
0002000
0001000
0000000
Объект может не попасть в снимок целиком, но гарантируется, что на снимке будет хотя бы одна из частей объекта (2).

Входной формат: 50 матриц 7х7 из цифр, как отдельные снимки, разделённые между собой строкой из знаков -. Например,

0000002
0000123
0000002
0000001
0000000
0000000
0000000
-------
0000000
0000000
0000000
0000000
0000000
0100000
0200000
'''
q = 2

Answer = []

for z in range(q):

    dic = {1:[], 2:[], 3:[]}

    for i in range(7):
        x = input()
        if '3' in x:
            dic[3] = (i, x.find('3'))
        elif '2' in x:
            dic[2].append((i, x.find('2')))
        elif '1' in x:
            dic[1].append((i, x.find('1')))


    if len(dic[3]) > 0:
        Answer.append(f'{dic[3][1] -3},{dic[3][0] -3}')
    elif len(dic[2]) > 0:
        t = dic[2][0]
        if t[0] == 0:
            Answer.append(f'{t[1] - 3},-4')
        elif t[0] == 6:
            Answer.append(f'{t[1] - 3},4')
        elif t[1] == 0:
            Answer.append(f'-4,{t[0] - 3}')
        else:
            Answer.append(f'4,{t[0] - 3}')

    else:
        t = dic[1][0]
        if t[0] == 0:
            Answer.append(f'{t[1] - 3},-5')
        elif t[0] == 6:
            Answer.append(f'{t[1] - 3},5')
        elif t[1] == 0:
            Answer.append(f'-5,{t[0] - 3}')
        else:
            Answer.append(f'5,{t[0] - 3}')
    if z < q - 1:
        input()
print(*Answer, sep = '\n')

#print(dic)
#{1: [(1, 3), (5, 3)], 2: [(2, 3), (4, 3), (3, 2), (3, 4)], 3: (3, 3)}